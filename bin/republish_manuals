#!/usr/bin/env ruby

require File.expand_path("../../config/environment", __FILE__)
require "manual_service_registry"
require "logger"

logger = Logger.new(STDOUT)
logger.formatter = Logger::Formatter.new

repository = ManualsPublisherWiring.get(:repository_registry).manual_repository

begin
  count = repository.all.count
rescue DocumentAssociationMarshaller::RemovedDocumentIdNotFoundError
  count = "?"
end

logger.info "Republishing #{count} manuals..."

repository.all.each.with_index do |manual, i|
  begin
    logger.info("[ #{i} / #{count} ] id=#{manual.id} slug=#{manual.slug}]")
    ManualServiceRegistry.new.republish(manual.id).call
  rescue DocumentAssociationMarshaller::RemovedDocumentIdNotFoundError => e
    logger.warn("Manual with id=#{manual.id} slug=#{manual.slug} has removed document which was not found: #{e.message}")
    next
  end
end

logger.info "Republishing of #{count} manuals complete."
